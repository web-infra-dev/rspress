// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`mdx > basic 1`] = `
"const frontmatter = {};
import {jsx as _jsx, jsxs as _jsxs} from "react/jsx-runtime";
import {useMDXComponents as _provideComponents} from "@mdx-js/react";
function _createMdxContent(props) {
  const _components = {
    a: "a",
    h1: "h1",
    ..._provideComponents(),
    ...props.components
  };
  return _jsxs(_components.h1, {
    id: "hello-world",
    children: [_jsx(_components.a, {
      className: "header-anchor",
      "aria-hidden": "true",
      href: "#hello-world",
      children: "#"
    }), "Hello World"]
  });
}
export default function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? _jsx(MDXLayout, {
    ...props,
    children: _jsx(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}

MDXContent.__RSPRESS_PAGE_META = {};

MDXContent.__RSPRESS_PAGE_META["index.mdx"] = {"toc":[],"title":"Hello World","headingTitle":"Hello World","frontmatter":{}};
"
`;

exports[`mdx > should allow custom id 1`] = `
"const frontmatter = {};
import {jsx as _jsx, jsxs as _jsxs} from "react/jsx-runtime";
import {useMDXComponents as _provideComponents} from "@mdx-js/react";
function _createMdxContent(props) {
  const _components = {
    a: "a",
    code: "code",
    h1: "h1",
    ..._provideComponents(),
    ...props.components
  };
  return _jsxs(_components.h1, {
    id: "custom-id",
    children: [_jsx(_components.a, {
      className: "header-anchor",
      "aria-hidden": "true",
      href: "#custom-id",
      children: "#"
    }), "Hello World ", _jsx(_components.code, {
      children: "inline code"
    })]
  });
}
export default function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? _jsx(MDXLayout, {
    ...props,
    children: _jsx(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}

MDXContent.__RSPRESS_PAGE_META = {};

MDXContent.__RSPRESS_PAGE_META["inline-code.mdx"] = {"toc":[],"title":"Hello World \`inline code\`","headingTitle":"Hello World \`inline code\`","frontmatter":{}};
"
`;

exports[`mdx > should render inline code in title 1`] = `
"const frontmatter = {};
import {jsx as _jsx, jsxs as _jsxs} from "react/jsx-runtime";
import {useMDXComponents as _provideComponents} from "@mdx-js/react";
function _createMdxContent(props) {
  const _components = {
    a: "a",
    code: "code",
    h1: "h1",
    ..._provideComponents(),
    ...props.components
  };
  return _jsxs(_components.h1, {
    id: "hello-world-inline-code",
    children: [_jsx(_components.a, {
      className: "header-anchor",
      "aria-hidden": "true",
      href: "#hello-world-inline-code",
      children: "#"
    }), "Hello World ", _jsx(_components.code, {
      children: "inline code"
    })]
  });
}
export default function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = {
    ..._provideComponents(),
    ...props.components
  };
  return MDXLayout ? _jsx(MDXLayout, {
    ...props,
    children: _jsx(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}

MDXContent.__RSPRESS_PAGE_META = {};

MDXContent.__RSPRESS_PAGE_META["inline-code.mdx"] = {"toc":[],"title":"Hello World \`inline code\`","headingTitle":"Hello World \`inline code\`","frontmatter":{}};
"
`;
